#!/usr/bin/env bash
# RedHat startup script for a supervisor instance
# chkconfig: - 90 15
# description: supervisor init script

{% set cfg = salt['mc_project.get_configuration'](project_name) %}
{% set data = cfg.data %}
### BEGIN INIT INFO
# Provides:          {{cfg.name}}
# Required-Start:    $syslog $network $time
# Required-Stop:     $syslog $network
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: {{cfg.name}}
# Description:       {{cfg.name}}
### END INIT INFO

TMPDIR="{{data.TMPDIR}}"
EFFECTIVE_USER="{{cfg.user}}"
supervisorctl="{{data.zroot}}/bin/supervisorctl"
supervisord="{{data.zroot}}/bin/supervisord"
name="supervisord_{{cfg.name}}"
lock="{{data.zroot}}/var/$name "

export TMPDIR

[ -f $supervisord ] || exit 1
[ -f $supervisorctl ] || exit 1

RETVAL=0
status() {
    set -x
    if [[ `whoami` == root ]];then
        su $EFFECTIVE_USER -c "bash -c \"$supervisorctl status all\""
        ret=$?
    else
      "$supervisorctl" status all
      ret=$?
    fi
    return ${ret}
}
start() {
    echo -n "Starting $name: "
    if [[ `whoami` == root ]];then
        su $EFFECTIVE_USER -c "bash -c \"$supervisord\""
    else
      "$supervisord"
    fi
    RETVAL=$?
    [ $RETVAL -eq 0 ] && touch $lock
    chown $EFFECTIVE_USER $lock
    echo
    return $RETVAL
}
stop() {
    echo -n "Stopping $name: "
    if [[ `whoami` == root ]];then
        su $EFFECTIVE_USER -c "$supervisorctl shutdown"
    else
        $supervisorctl shutdown
    fi
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f $lock
    echo
    return $RETVAL
}
case "$1" in
         status)
             status
             exit $?
             ;;
         start)
             start
             ;;

         stop)
             stop
             ;;

         restart)
             stop
             sleep 2
             start
             ;;
esac
exit $REVAL
# vim:set ft=sh:
